namespace = rg_event
# 灰风起源创建灰风事件
# Spawn L-Cluster
country_event = {
	id = rg_event.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		AND = {
			has_origin = origin_rg_gray
			# NOT = { has_global_flag = rg_origin_l_cluster }
		}
	}
	immediate = {
		if = {
			limit = {
				has_civic = civic_rg_gray_cluster
			}
			rg_event_effect_event1_cluster = yes
		}
		else_if = {
			limit = {
				has_civic = civic_rg_gray_non_cluster
			}
			rg_event_effect_event1_cluster_galaxy = yes
		}
		else = {
			rg_event_effect_event1_cluster = yes
		}
	}
}

country_event = {
	id = rg_event.2
	title = graygoo.500.title
	desc = RG_realgray.desc
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:rg_gray_country_leader
		room = "ethic_spaceship_room"
	}
	is_triggered_only = yes
	immediate = {
		rg_event_effect_event2_gray_origin_init = yes
	}
	option = {
		name = rg_event.2.a
		default_hide_option = yes
	}
}

country_event = {
	id = rg_event.3
	title = "graygoo.500.title"
	desc = {
		trigger = {
			has_country_flag = RG_realgray
		}
		text = "RG_realgray.desc"
	}
	desc = {
		trigger = {
			has_country_flag = RG_sleepinggray
		}
		text = "RG_sleepinggray.desc"
	}
	desc = {
		trigger = {
			has_country_flag = RG_whitenoise
		}
		text = "RG_whitenoise.desc"
	}
	desc = {
		trigger = {
			has_country_flag = RG_dragon
		}
		text = "RG_dragon.desc"
	}
	desc = {
		trigger = {
			has_country_flag = RG_desanau
		}
		text = "RG_desanau.desc"
	}
	desc = {
		trigger = {
			has_country_flag = RG_pirate
		}
		text = "RG_pirate.desc"
	}
	desc = {
		trigger = {
			has_country_flag = RG_alienpoem
		}
		text = "RG_alienpoem.desc"
	}
	desc = {
		trigger = {
			has_country_flag = RG_gift
		}
		text = "RG_gift.desc"
	}
	desc = {
		trigger = {
			has_country_flag = RG_biggift
		}
		text = "RG_biggift.desc"
	}
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:rg_gray_country_leader
		room = "ethic_spaceship_room"
	}
	is_triggered_only = yes
	immediate = {
		rg_gray_country_init = yes
		random_list = {
			# Real Gray!
			100 = {
				modifier = {
					factor = 0
					any_playable_country = {
						has_country_flag = gray_owner
					}
				}
				set_country_flag = RG_realgray
			}
			# Sleeping Beauty
			0 = {
				modifier = {
					factor = 0
					any_playable_country = {
						has_country_flag = gray_owner
					}
				}
				set_country_flag = RG_sleepinggray
			}
			# in fact..Empty
			0 = {
				random_list = {
					200 = {
						modifier = {
							factor = 100
							any_playable_country = {
								has_country_flag = gray_owner
							}
						}
						set_country_flag = RG_whitenoise
					}
					100 = {
						set_country_flag = RG_dragon
					}
					100 = {
						set_country_flag = RG_desanau
					}
					100 = {
						set_country_flag = RG_pirate
					}
					100 = {
						set_country_flag = RG_alienpoem
					}
					50 = {
						set_country_flag = RG_gift
					}
					10 = {
						set_country_flag = RG_biggift
					}
				}
			}
		}
	}
	after = {
		hidden_effect = {
			switch = {
				trigger = has_country_flag
				RG_realgray = {
					remove_country_flag = RG_realgray
				}
				RG_sleepinggray = {
					remove_country_flag = RG_sleepinggray
				}
				RG_whitenoise = {
					remove_country_flag = RG_whitenoise
				}
				RG_dragon = {
					remove_country_flag = RG_dragon
				}
				RG_desanau = {
					remove_country_flag = RG_desanau
				}
				RG_pirate = {
					remove_country_flag = RG_pirate
				}
				RG_alienpoem = {
					remove_country_flag = RG_alienpoem
				}
				RG_gift = {
					remove_country_flag = RG_gift
				}
				RG_biggift = {
					remove_country_flag = RG_biggift
				}
			}
		}
	}
	option = {
		custom_gui = "enclave_caravaneer_option"
		name = OK
		hidden_effect = {
			switch = {
				trigger = has_country_flag
				RG_realgray = {
					custom_tooltip = "RG_realgray"
					country_event = {
						id = graygoo.499
						days = 30
					}
					give_technology = {
						tech = tech_minilaser_gray_1
						message = no
					}
					give_technology = {
						tech = tech_object_gray_5
						message = no
					}
				}
				RG_sleepinggray = {
					custom_tooltip = "RG_sleepinggray"
					country_event = {
						id = graygoo.499
						days = 360
					}
					give_technology = {
						tech = tech_minilaser_gray_1
						message = no
					}
					give_technology = {
						tech = tech_object_gray_5
						message = no
					}
				}
				RG_whitenoise = {
					custom_tooltip = "RG_whitenoise"
					country_event = {
						id = graygoo.499
						days = 360
					}
					give_technology = {
						tech = tech_minilaser_gray_1
						message = no
					}
					give_technology = {
						tech = tech_object_gray_5
						message = no
					}
				}
				RG_dragon = {
					custom_tooltip = "RG_dragon"
					country_event = {
						id = graygoo.499
						days = 360
					}
					give_technology = {
						tech = tech_object_gray_5
					}
					add_monthly_resource_mult = {
						resource = society_research
						value = 24
						min = 2000
					}
					give_technology = {
						tech = tech_minilaser_gray_1
					}
					tooltip = {
						give_technology = {
							tech = tech_object_gray_5
						}
						give_technology = {
							tech = tech_minilaser_gray_1
						}
						add_monthly_resource_mult = {
							resource = society_research
							value = 24
							min = 2000
						}
					}
					give_technology = {
						tech = tech_minilaser_gray_1
					}
				}
				RG_desanau = {
					custom_tooltip = "RG_desanau"
					country_event = {
						id = graygoo.499
						days = 360
					}
					give_technology = {
						tech = tech_object_gray_5
					}
					add_monthly_resource_mult = {
						resource = society_research
						value = 24
						min = 2000
					}
					give_technology = {
						tech = tech_minilaser_gray_1
					}
					tooltip = {
						add_monthly_resource_mult = {
							resource = society_research
							value = 24
							min = 2000
						}
						give_technology = {
							tech = tech_minilaser_gray_1
						}
						give_technology = {
							tech = tech_object_gray_5
						}
					}
				}
				RG_pirate = {
					custom_tooltip = "RG_pirate"
					country_event = {
						id = graygoo.499
						days = 360
					}
					give_technology = {
						tech = tech_object_gray_5
					}
					add_monthly_resource_mult = {
						resource = society_research
						value = 24
						min = 2000
					}
					give_technology = {
						tech = tech_minilaser_gray_1
					}
					tooltip = {
						add_monthly_resource_mult = {
							resource = society_research
							value = 24
							min = 2000
						}
						give_technology = {
							tech = tech_minilaser_gray_1
						}
						give_technology = {
							tech = tech_object_gray_5
						}
					}
				}
				RG_alienpoem = {
					custom_tooltip = "RG_alienpoem"
					country_event = {
						id = graygoo.499
						days = 360
					}
					give_technology = {
						tech = tech_object_gray_5
					}
					add_monthly_resource_mult = {
						resource = society_research
						value = 24
						min = 2000
					}
					give_technology = {
						tech = tech_minilaser_gray_1
					}
					tooltip = {
						add_monthly_resource_mult = {
							resource = society_research
							value = 24
							min = 2000
						}
						give_technology = {
							tech = tech_minilaser_gray_1
						}
						give_technology = {
							tech = tech_object_gray_5
						}
					}
				}
				RG_gift = {
					custom_tooltip = "RG_gift"
					country_event = {
						id = graygoo.499
						days = 360
					}
					give_technology = {
						tech = tech_object_gray_5
					}
					add_resource = {
						minerals = 10000
					}
					give_technology = {
						tech = tech_minilaser_gray_1
					}
					tooltip = {
						add_resource = {
							minerals = 10000
						}
						give_technology = {
							tech = tech_minilaser_gray_1
						}
						give_technology = {
							tech = tech_object_gray_5
						}
					}
				}
				RG_biggift = {
					custom_tooltip = "RG_biggift"
					country_event = {
						id = graygoo.499
						days = 360
					}
					give_technology = {
						tech = tech_object_gray_5
					}
					give_technology = {
						tech = tech_minilaser_gray_1
					}
					add_resource = {
						minerals = 1000000
					}
					tooltip = {
						give_technology = {
							tech = tech_object_gray_5
						}
						give_technology = {
							tech = tech_minilaser_gray_1
						}
						add_resource = {
							minerals = 1000000
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = rg_event.7
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		remove_country_flag = gray_alreadybegged
	}
}

country_event = {
	###月中
	id = rg_event.8
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_country_flag = gray_owner
	}
	immediate = {
		every_owned_leader = {
			if = {
				###等级检测
				limit = {
					has_leader_flag = rg_gray_leader
				}
				export_trigger_value_to_variable = {
					trigger = has_base_skill
					variable = rg_gray_level_temp
				}
				owner = {
					set_variable = {
						which = rg_gray_level
						value = prev.rg_gray_level_temp
					}
				}
				clear_variable = rg_gray_level_temp
			}
		}
		rg_harbitar_size_calculate = yes
	}
}

# 开始改造
country_event = {
	id = rg_event.9
	title = rg_event.9.title
	desc = rg_event.9.desc
	picture = GFX_evt_gray_goo_ships
	is_triggered_only = yes
	trigger = {
		NOR = {
			has_country_flag = rg_gray_level_2
			has_country_flag = rg_gray_level_3
		}
	}
	immediate = {
		event_target:gray_warship = {
			set_event_locked = yes
		}
		event_target:gray_owner = {
			set_country_flag = rg_modifing_gray
		}
	}
	option = {
		name = rg_event.9.a
		default_hide_option = yes
	}
}

# 取消改造项目1
country_event = {
	id = rg_event.10
	title = rg_event.10.title
	desc = rg_event.10.desc
	picture = GFX_evt_gray_goo_ships
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				exists = event_target:gray_warship
			}
			event_target:gray_warship = {
				set_event_locked = no
			}
		}
		else = {
			every_controlled_fleet = {
				limit = {
					has_fleet_flag = gray_fleet
				}
				set_event_locked = no
			}
		}
		remove_country_flag = rg_modifing_gray
		abort_special_project = {
			type = RG_GRAY_MOD1
		}
	}
	option = {
		name = rg_event.10.a
		default_hide_option = yes
	}
}

# mod1完成改造
country_event = {
	id = rg_event.11
	title = rg_event.11.title
	desc = rg_event.11.desc
	picture = GFX_evt_gray_goo_ships
	is_triggered_only = yes
	immediate = {
		remove_country_flag = rg_modifing_gray
		remove_country_flag = rg_gray_level_1
		set_country_flag = rg_gray_level_2
		every_controlled_fleet = {
			limit = {
				has_fleet_flag = gray_fleet
			}
			delete_fleet = {
				target = this
				kill_leader = no
				destroy_template = yes
			}
		}
		create_ship_design = {
			design = "NAME_Gray_Warship_rg"
		}
		add_ship_design = last_created_design
		rg_warship_init_mod1 = yes
		random_situation = {
			limit = {
				is_situation_type = situation_rg_gray_mod1
			}
			remove_situation_flag = rg_stage6_locked
			set_situation_locked = no
			remove_situation_flag = locked
		}
	}
	option = {
		name = OK
	}
}

# mod2完成改造
country_event = {
	id = rg_event.12
	title = rg_event.12.title
	desc = rg_event.12.desc
	picture = GFX_evt_gray_goo_ships
	is_triggered_only = yes
	immediate = {
		remove_country_flag = rg_modifing_gray
		remove_country_flag = rg_gray_level_1
		remove_country_flag = rg_gray_level_2
		set_country_flag = rg_gray_level_3
		every_controlled_fleet = {
			limit = {
				has_fleet_flag = gray_fleet
			}
			delete_fleet = {
				target = this
				kill_leader = no
				destroy_template = yes
			}
		}
		give_technology = {
			tech = tech_gray_juggernaut_8
		}
		create_ship_design = {
			design = "NAME_gray_capitalship"
		}
		add_ship_design = last_created_design
		rg_warship_init_mod2 = yes
		random_situation = {
			limit = {
				is_situation_type = situation_rg_gray_mod2
			}
			remove_situation_flag = rg_stage6_locked
			set_situation_locked = no
			remove_situation_flag = locked
		}
	}
	option = {
		name = OK
	}
}

# 取消改造项目2
country_event = {
	id = rg_event.13
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				exists = event_target:gray_warship
			}
			event_target:gray_warship = {
				set_event_locked = no
			}
		}
		else = {
			every_controlled_fleet = {
				limit = {
					has_fleet_flag = gray_fleet
				}
				set_event_locked = no
			}
		}
		remove_country_flag = rg_modifing_gray
		abort_special_project = {
			type = RG_GRAY_MOD2
		}
	}
}

# 取消改造项目3
country_event = {
	id = rg_event.14
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				exists = event_target:gray_warship
			}
			event_target:gray_warship = {
				set_event_locked = no
			}
		}
		else = {
			every_controlled_fleet = {
				limit = {
					has_fleet_flag = gray_fleet
				}
				set_event_locked = no
			}
		}
		remove_country_flag = rg_modifing_gray
		abort_special_project = {
			type = RG_GRAY_MOD3
		}
	}
}

# mod3完成改造
country_event = {
	id = rg_event.15
	title = rg_event.15.title
	desc = rg_event.15.desc
	picture = GFX_evt_gray_goo_ships
	is_triggered_only = yes
	immediate = {
		remove_country_flag = rg_modifing_gray
		set_country_flag = rg_juggernaut_fired
		create_ship_design = {
			design = "NAME_gray_juggernautship"
		}
		add_ship_design = last_created_design
	}
	option = {
		name = OK
	}
}

# 小灰陆军入侵完成替换回压制舰
country_event = {
	id = rg_event.16
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		RG_gray_army_active_trigger = yes
		any_owned_army = {
			army_type = gray_army
			fleet = {
				NOT = {
					is_ship_size = RG_armed_transport_ship
				}
			}
		}
		NOT = {
			any_owned_army = {
				army_type = gray_army
				exists = planet
			}
		}
	}
	immediate = {
		every_owned_army = {
			limit = {
				army_type = gray_army
			}
			fleet = {
				save_event_target_as = gray_transport_location
			}
		}
		create_ship_design = {
			design = "NAME_RG_armed_transport_ship"
		}
		add_ship_design = last_created_design
		create_fleet = {
			name = "NAME_Gray"
			effect = {
				set_owner = prev
				create_army_transport = {
					ship_name = "NAME_Gray"
					army_name = "NAME_Gray"
					army_type = "gray_army"
				}
				set_location = {
					target = event_target:gray_transport_location
					distance = 0
					angle = random
				}
				set_fleet_stance = aggressive
			}
		}
		last_created_army = {
			assign_leader = event_target:gray_leader_general
		}
		remove_ship_design = last_created_design
		every_owned_army = {
			limit = {
				army_type = gray_army
				fleet = {
					NOT = {
						is_ship_size = RG_armed_transport_ship
					}
				}
			}
			if = {
				limit = {
					exists = leader
				}
				unassign_leader = leader
			}
			remove_army = yes
		}
	}
}

country_event = {
	# 年检补开门
	id = rg_event.17
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_megastructure = {
			is_megastructure_type = lgate_base
			has_megastructure_flag = lgate_activated
		}
	}
	immediate = {
		every_megastructure = {
			limit = {
				is_megastructure_type = lgate_base
				NOT = {
					has_megastructure_flag = lgate_activated
				}
			}
			activate_gateway = this
			set_megastructure_flag = lgate_activated
		}
	}
}

country_event = {
	# 中期开门
	id = rg_event.18
	title = rg_event.18.title
	desc = rg_event.18.desc
	is_triggered_only = yes
	fire_only_once = yes
	picture = GFX_evt_drifting_gateway
	trigger = {
		NOT = {
			has_global_flag = has_origin_gray_dragon
		}
		has_country_flag = origin_rg_gray
		OR = {
			any_system_megastructure = {
				is_megastructure_type = lgate_base
				NOT = {
					has_megastructure_flag = lgate_activated
				}
			}
			NOT = {
				has_special_project = RG_LCLUSTER_PROJECT
			}
			has_special_project = LCLUSTER_PROJECT
		}
	}
	immediate = {
		give_technology = {
			tech = tech_lgate_activation
		}
		if = {
			limit = {
				any_system_within_border = {
					OR = {
						has_star_flag = lcluster_lgate
						has_star_flag = lgate_originating_system
					}
					any_system_megastructure = {
						is_megastructure_type = lgate_base
					}
				}
			}
			every_system_within_border = {
				limit = {
					OR = {
						has_star_flag = lcluster_lgate
						has_star_flag = lgate_originating_system
					}
					any_system_megastructure = {
						is_megastructure_type = lgate_base
					}
				}
				save_global_event_target_as = candidate_gateway
			}
			country_event = {
				id = distar.10905
			}			# enable project
		}
		else = {
			country_event = {
				id = rg_event.21
				days = 120
			}
		}
	}
	option = {
		name = OK
	}
}


country_event = {
	id = rg_event.19
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	trigger = {
		is_ai = no
	}
	immediate = {
		set_global_flag = has_rg_mod
	}
}

country_event = {
	# 年检模拟龙年龄
	id = rg_event.20
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_country_flag = rg_fake_dragon_owner
	}
	immediate = {
		if = {
			limit = {
				NOT = {
					has_country_flag = rg_fake_dragon_reborn_country
				}
			}
			change_variable = {
				which = rg_fake_dragon_timedlife_counter
				value = 12
			}
		}
		else_if = {
			limit = {
				has_country_flag = rg_fake_dragon_reborn_country
				NOT = {
					has_country_flag = origin_gray_dragon_country
				}
			}
			change_variable = {
				which = rg_fake_dragon_timedlife_counter
				value = 1
			}
		}
		else_if = {
			limit = {
				has_country_flag = rg_fake_dragon_reborn_country
				has_country_flag = origin_gray_dragon_country
			}
			change_variable = {
				which = rg_fake_dragon_timedlife_counter
				value = 12
			}
		}
		#等级导入，把存储的领袖等级赋予到领袖身上
		random_owned_leader = {
			limit = {
				has_leader_flag = rg_fake_dragon
			}
			set_age = owner.rg_fake_dragon_timedlife_counter
		}
		random_owned_fleet = {
			limit = {
				NOT = {
					has_fleet_flag = rg_fake_dragon_fleet
				}
				leader = {
					has_leader_flag = rg_fake_dragon
					NOT = {
						has_leader_flag = rg_fake_dragon_reborn
					}
				}
			}
			unassign_leader = this
		}
	}
}

# looping check for owning gateway, once every two months
country_event = {
	id = rg_event.21
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		NOR = {
			has_global_flag = l_cluster_opened
			has_special_project = RG_LCLUSTER_PROJECT
		}
	}
	immediate = {
		if = {
			limit = {
				any_owned_megastructure = {
					is_megastructure_type = lgate_base
				}
				has_technology = tech_lgate_activation
			}
			random_owned_megastructure = {
				limit = {
					is_megastructure_type = lgate_base
				}
				save_global_event_target_as = candidate_gateway
			}
			country_event = {
				id = distar.10905
			}
			# enable project
		}
		else = {
			country_event = {
				id = rg_event.21
				days = 120
			}
			# *THIS* looping check
		}
	}
}

# # looping check for grayreforming
# country_event = {
# 	id = rg_event.22
# 	hide_window = yes
# 	is_triggered_only = yes
# 	trigger = {
# 		is_same_value = event_target:gray_owner
# 		RG_gray_is_reforming_trigger = yes
# 	}
# 	immediate = {
# 		if = {
# 			limit = {
# 				NOT = {
# 					has_modifier = "gray_scattered"
# 				}
# 			}
# 			country_event = {
# 				id = graygoo.512
# 			}
# 		}
# 		else = {
# 			country_event = {
# 				id = rg_event.22
# 				years = 1
# 			}
# 			# *THIS* looping check
# 		}
# 	}
# }


country_event = { # Memorial Valuts Civic Paragon Level Tick / FROM = Leader
	id = rg_event.23
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_same_value = event_target:gray_owner
		FROM = {
			has_leader_flag = rg_gray_leader
		}
		RG_gray_harbitat_active_trigger = yes
	}

	immediate = {
		rg_harbitar_size_calculate = yes
		event_target:rg_gray_habitat_target = {
			set_planet_size = owner.rg_habitat_size
		}
	}
}

# Necrophage Purge

# on_pop_purged
# This = Planet scope
# From = Country
# FromFrom = Pop
planet_event = {
	id = rg_event.24
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		exists = fromfrom #crisis.202 can remove the last pop
		fromfrom = {
			has_purge_type = {
				type = purge_nanophage
			}
		}
	}

	immediate = {
		weighted_random_owned_pop_group = {
			limit = {
				is_same_species = owner_species
			}
			species = { save_event_target_as = necrophage_pop_species }
		}
		if = {
			limit = {
				exists = event_target:necrophage_pop_species
			}
			create_pop_group = {
				species = event_target:necrophage_pop_species
				size = 0
				effect = {
					save_event_target_as = last_created_pop_group
				}
			}
		}
		else = {
			create_pop_group = {
				species = owner_species
				size = 0
				effect = {
					save_event_target_as = last_created_pop_group
				}
			}
		}
		if = {
			limit = {
				event_target:last_created_pop_group = {
					NOT = { ideal_planet_class = root }
				}
				NOR = {
					uses_district_set = habitat
					uses_district_set = ring_world
					uses_district_set = city_world
					uses_district_set = hive_world
					uses_district_set = machine_world
					is_planet_class = pc_gaia
					is_planet_class = pc_relic
				}
				owner = {
					has_technology = tech_glandular_acclimation
					NOT = { ideal_planet_class = root }
				}
			}
			event_target:last_created_pop_group = {
				modify_species = {
					ideal_planet_class = root
				}
			}
		}
		event_target:last_created_pop_group = {
			add_pop_amount = local_pop_amount
		}
		while = {
			count = local_pop_amount
			if = {
				limit = {
					from = {
						OR = {
							has_active_tradition = tr_harmony_unity_of_self
							has_active_tradition = tr_synchronicity_unity_of_mind
						}
					}
				}
				from = {
					add_monthly_resource_mult = {
						resource = unity
						value = 1.5
						min = 5
						max = 100
					}
				}
			}
		}
		every_country = {
			limit = {
				has_communications = FROM
				NOT = { is_country = FROM }
				NOT = { is_same_species = FROMFROM }
				NOT = { has_ai_personality_behaviour = purger }
				NOT = { has_origin = origin_necrophage }
				NOT = { has_ethic = ethic_gestalt_consciousness }
				NOR = {
					has_valid_civic = civic_death_cult
					has_valid_civic = civic_death_cult_corporate
				}
				OR = {
					is_country_type = default
					has_ai_personality = awakened_fallen_empire_xenophile
				}
				has_intel_level = {
					who = FROM
					category = economy
					level >= 2
				}
			}
			while = {
				count = local_pop_amount
				add_opinion_modifier = { who = FROM modifier = opinion_nanophage }
			}
		}
		every_country = {
			limit = {
				has_communications = FROM
				NOT = { is_country = FROM }
				is_same_species = FROMFROM
				has_intel_level = {
					who = FROM
					category = economy
					level >= 1 #lower because you'd hear from a friend of a friend
				}
			}
			while = {
				count = local_pop_amount
				add_opinion_modifier = { who = FROM modifier = opinion_nanophage_our_species }
			}
		}
	}
}

country_event = { # Memorial Valuts Civic Paragon Level Tick / FROM = Leader
	id = rg_event.25
	hide_window = yes

	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		rg_create_gray_planetkiller_testship_2 = yes
		capital_scope = {
			every_owned_pop_group = {
				modify_species = {
					species = owner_main_species
					add_trait = rg_machine_maid_trait
				}
			}
		}

	}
}

# 拆毁工厂小灰通讯
country_event = {
	id = rg_event.200
	title = "rg_event.200.name"
	trigger = {
		NOT = {
			any_playable_country = {
				has_country_flag = gray_owner
			}
		}
	}
	desc = {
		trigger = {
			owner = {
				is_synthetic_empire = no
			}
		}
		text = "rg_event.200.a.desc"
	}
	desc = {
		trigger = {
			owner = {
				is_synthetic_empire = yes
			}
		}
		text = "rg_event.200.b.desc"
	}
	picture = GFX_evt_ship_in_orbit_2
	show_sound = event_radio_chatter
	is_triggered_only = yes
	#immediate = {
	#	from = { save_event_target_as = gray_homeworld }
	#}
	option = {
		name = rg_event.200.a
		hidden_effect = {
			create_fleet = {
				effect = {
					set_owner = event_target:rg_graygoo_country
					create_ship = {
						name = random
						design = "NAME_Gray_Warship"
						graphical_culture = "pirate_01"
					}
					set_location = {
						target = event_target:rg_main_star
						distance = 55
						angle = 270
					}
					save_event_target_as = aggressive_gray
				}
			}
		}
	}
	option = {
		name = rg_event.200.b
		hidden_effect = {
			owner = {
				country_event = {
					id = rg_event.400
				}
			}
		}
	}
}

# L星龙暴毙小灰通讯
country_event = {
	id = rg_event.201
	title = "rg_event.201.name"
	trigger = {
		NOT = {
			any_playable_country = {
				has_country_flag = gray_owner
			}
		}
	}
	desc = {
		text = "rg_event.201.desc"
	}
	picture = GFX_evt_ship_in_orbit_2
	show_sound = event_radio_chatter
	is_triggered_only = yes
	#immediate = {
	#	from = { save_event_target_as = gray_homeworld }
	#}
	option = {
		name = rg_event.201.a
		hidden_effect = {
			create_fleet = {
				effect = {
					set_owner = event_target:rg_graygoo_country
					create_ship = {
						name = random
						design = "NAME_Gray_Warship"
						graphical_culture = "pirate_01"
					}
					set_location = {
						target = event_target:rg_main_star
						distance = 55
						angle = 270
					}
					save_event_target_as = aggressive_gray
				}
			}
		}
	}
	option = {
		name = rg_event.201.b
		hidden_effect = {
			owner = {
				country_event = {
					id = rg_event.402
				}
			}
		}
	}
}

# 灰色风暴线小灰通讯
# country_event = {
# 	id = rg_event.400
# 	title = "TRANSMISSION"
# 	is_triggered_only = yes
# 	trigger = {
# 		NOT = {
# 			any_playable_country = {
# 				has_country_flag = gray_owner
# 			}
# 		}
# 	}
# 	desc = {
# 		trigger = {
# 			NOT = {
# 				is_machine_empire = yes
# 			}
# 		}
# 		text = "rg_event.400.a.desc"
# 	}
# 	desc = {
# 		trigger = {
# 			is_machine_empire = yes
# 		}
# 		text = "rg_event.400.b.desc"
# 	}
# 	diplomatic = yes
# 	picture_event_data = {
# 		portrait = root.species
# 		room = "ethic_spaceship_room"
# 	}
#
# 	option = {
# 		name = rg_event.400.a
# 		trigger = {
# 			NOR = {
# 				is_machine_empire = yes
# 				is_hive_empire = yes
# 			}
# 		}
# 		hidden_effect = {
# 			country_event = {
# 				id = graygoo.406
# 			}
# 		}
# 	}
# 	option = {
# 		name = rg_event.400.b
# 		trigger = {
# 			is_machine_empire = yes
# 		}
# 		hidden_effect = {
# 			country_event = {
# 				id = graygoo.406
# 			}
# 		}
# 	}
# 	option = {
# 		name = rg_event.400.c
# 		trigger = {
# 			is_hive_empire = yes
# 		}
# 		hidden_effect = {
# 			country_event = {
# 				id = graygoo.406
# 			}
# 		}
# 	}
# 	option = {
# 		name = rg_event.400.d
# 		hidden_effect = {
# 			country_event = {
# 				id = rg_event.401
# 			}
# 		}
# 	}
# }

country_event = {
	id = rg_event.401
	title = "TRANSMISSION"
	desc = "rg_event.401.desc"
	diplomatic = yes
	picture_event_data = {
		portrait = root.species
		room = "ethic_spaceship_room"
	}
	is_triggered_only = yes
	option = {
		name = rg_event.401.a
		response_text = rg_event.401.a.response
	}
	option = {
		name = rg_event.401.b
		hidden_effect = {
			create_fleet = {
				effect = {
					set_owner = event_target:rg_graygoo_country
					create_ship = {
						name = random
						design = "NAME_Gray_Warship"
						graphical_culture = "pirate_01"
					}
					set_location = {
						target = event_target:rg_main_star
						distance = 55
						angle = 270
					}
					save_event_target_as = aggressive_gray
				}
			}
		}
	}
}

# L星龙线小灰通讯
country_event = {
	id = rg_event.402
	title = "TRANSMISSION"
	desc = {
		text = "rg_event.402.a.desc"
	}
	diplomatic = yes
	picture_event_data = {
		portrait = root.species
		room = "ethic_spaceship_room"
	}
	is_triggered_only = yes
	option = {
		name = rg_event.402.a
		hidden_effect = {
			country_event = {
				id = rg_event.403
			}
		}
	}
	option = {
		name = rg_event.402.b
		hidden_effect = {
			country_event = {
				id = rg_event.401
			}
		}
	}
}

# L星龙线小灰通讯回答
country_event = {
	id = rg_event.403
	title = "TRANSMISSION"
	desc = "rg_event.403.desc"
	diplomatic = yes
	picture_event_data = {
		portrait = root.species
		room = "ethic_spaceship_room"
	}
	is_triggered_only = yes
	option = {
		name = rg_event.403.a
		response_text = rg_event.403.a.response
		default_hide_option = yes
		hidden_effect = {
			country_event = {
				id = graygoo.499
			}
		}
	}
}

country_event = {
	id = rg_event.404
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		random_owned_ship = {
			limit = {
				is_ship_size = graygoo_factory
			}
			save_event_target_as = graygoo_factory
		}
		create_fleet = {
			name = "NAME_Tempest_Fleet"
			effect = {
				set_owner = root
				rg_emergency_fleet_defence = yes
				set_formation_scale = 2
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 250
				set_location = {
					target = event_target:graygoo_factory
					distance = 10
					angle = random
				}
				fleet_event = {
					id = rg_event.406
					days = 30
					random = 5
				}
			}
		}
		if = {
			limit = {
				num_fleets < 60
			}
			create_fleet = {
				name = "NAME_Tempest_Fleet"
				effect = {
					set_owner = root
					rg_emergency_fleet_defence = yes
					set_formation_scale = 2
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 250
					set_location = {
						target = event_target:graygoo_factory
						distance = 10
						angle = random
					}
					fleet_event = {
						id = rg_event.406
						days = 30
						random = 5
					}
				}
			}
		}
		if = {
			limit = {
				num_fleets < 30
			}
			create_fleet = {
				name = "NAME_Tempest_Fleet"
				effect = {
					set_owner = root
					rg_emergency_fleet_defence = yes
					set_formation_scale = 2
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 250
					set_location = {
						target = event_target:graygoo_factory
						distance = 10
						angle = random
					}
					fleet_event = {
						id = rg_event.406
						days = 30
						random = 5
					}
				}
			}
		}
	}
}

country_event = {
	id = rg_event.405
	hide_window = yes
	trigger = {
		is_country_type = gray_goo
	}
	mean_time_to_happen = {
		days = 180
	}
	immediate = {
		every_owned_fleet = {
			limit = {
				any_owned_ship = {
					is_ship_size = graygoo_mothership
				}
			}
			fleet_event = {
				id = rg_event.406
				days = 4
				random = 3
			}
		}
	}
}

fleet_event = {
	id = rg_event.406
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				end_game_years_passed >= -10
				num_ships < 20
			}
			random_list = {
				20 = {
					create_ship = {
						name = random
						design = "NAME_Nanite_Mothership"
						graphical_culture = "pirate_01"
						upgradable = no
					}
				}
				10 = {
					create_ship = {
						name = random
						design = "RG_aircruiser_Interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				10 = {
					create_ship = {
						name = random
						design = "RG_carrier_Interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				10 = {
					create_ship = {
						name = random
						design = "RG_battleship_Interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				10 = {
					create_ship = {
						name = random
						design = "RG_titan_interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				10 = {
					create_ship = {
						name = random
						design = "RG_torpedo_interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				10 = {
					create_ship = {
						name = random
						design = "RG_AA_interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				10 = {
					create_ship = {
						name = random
						design = "RG_Arsenal_Interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				10 = {
					create_ship = {
						name = random
						design = "RG_torpedocruiser_interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
			}
		}
		else_if = {
			limit = {
				end_game_years_passed < -10
				mid_game_years_passed >= -10
				num_ships < 15
			}
			random_list = {
				10 = {
					create_ship = {
						name = random
						design = "RG_aircruiser_Interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				10 = {
					create_ship = {
						name = random
						design = "RG_carrier_Interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				10 = {
					create_ship = {
						name = random
						design = "RG_battleship_Interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				10 = {
					create_ship = {
						name = random
						design = "RG_titan_interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				10 = {
					create_ship = {
						name = random
						design = "RG_torpedo_interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				10 = {
					create_ship = {
						name = random
						design = "RG_AA_interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				10 = {
					create_ship = {
						name = random
						design = "RG_Arsenal_Interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				10 = {
					create_ship = {
						name = random
						design = "RG_torpedocruiser_interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				5 = {
					create_ship = {
						name = random
						design = "NAME_Nanite_Mothership"
						graphical_culture = "pirate_01"
						upgradable = no
					}
				}
			}
		}
		else_if = {
			limit = {
				mid_game_years_passed < -10
				num_ships < 10
			}
			random_list = {
				55 = {
				}
				5 = {
					create_ship = {
						name = random
						design = "NAME_Nanite_Mothership"
						graphical_culture = "pirate_01"
						upgradable = no
					}
				}
				5 = {
					create_ship = {
						name = random
						design = "RG_aircruiser_Interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				5 = {
					create_ship = {
						name = random
						design = "RG_carrier_Interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				5 = {
					create_ship = {
						name = random
						design = "RG_battleship_Interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				5 = {
					create_ship = {
						name = random
						design = "RG_titan_interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				5 = {
					create_ship = {
						name = random
						design = "RG_torpedo_interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				5 = {
					create_ship = {
						name = random
						design = "RG_AA_interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				5 = {
					create_ship = {
						name = random
						design = "RG_Arsenal_Interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
				5 = {
					create_ship = {
						name = random
						design = "RG_torpedocruiser_interdictor"
						graphical_culture = "pirate_01"
						upgradable = yes
					}
				}
			}
		}
	}
}

country_event = {
	id = rg_event.407
	hide_window = yes
	trigger = {
		is_country = event_target:global_event_country
		end_game_years_passed < -10
		mid_game_years_passed >= -10
		has_global_flag = active_gray_goo
		any_system = {
			has_star_flag = graygoo_factory_system
			any_fleet_in_system = {
				is_ship_size = graygoo_factory
			}
		}
	}
	mean_time_to_happen = {
		months = 20
	}
	immediate = {
		random_country = {
			limit = {
				is_country_type = gray_goo
			}
			save_event_target_as = graygoo_country
		}
		if = {
			limit = {
				any_system = {
					has_star_flag = lcluster
					any_fleet_in_system = {
						owner = {
							NOT = {
								is_country = event_target:rg_graygoo_country
							}
						}
					}
				}
			}
			random_country = {
				limit = {
					is_country = event_target:rg_graygoo_country
				}
				country_event = {
					id = rg_event.405
					days = 10
					random = 5
				}
			}
		}
		else_if = {
			limit = {
				event_target:rg_graygoo_country = {
					num_fleets < 30
				}
			}
			every_system = {
				limit = {
					NOR = {
						has_star_flag = lcluster_lgate
						has_star_flag = lgate_originating_system
					}
					any_system_megastructure = {
						is_megastructure_type = lgate_base
					}
				}
				random_system_megastructure = {
					limit = {
						is_megastructure_type = lgate_base
					}
					create_ambient_object = {
						type = "horror_spawn_object"
						location = THIS
						use_3d_location = yes
						duration = 10
					}
					create_fleet = {
						name = "NAME_Tempest_Fleet"
						effect = {
							set_owner = event_target:rg_graygoo_country
							rg_create_graygoo_fleet_random = yes
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 0
								angle = 0
							}
							fleet_event = {
								id = rg_event.406
								days = 30
								random = 5
							}
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = rg_event.408
	hide_window = yes
	trigger = {
		is_country = event_target:global_event_country
		end_game_years_passed >= -10
		has_global_flag = active_gray_goo
		any_system = {
			has_star_flag = graygoo_factory_system
			any_fleet_in_system = {
				is_ship_size = graygoo_factory
			}
		}
	}
	mean_time_to_happen = {
		months = 20
	}
	immediate = {
		random_country = {
			limit = {
				is_country_type = gray_goo
			}
			save_event_target_as = graygoo_country
		}
		if = {
			limit = {
				any_system = {
					has_star_flag = lcluster
					any_fleet_in_system = {
						owner = {
							NOT = {
								is_country = event_target:rg_graygoo_country
							}
						}
					}
				}
			}
			random_country = {
				limit = {
					is_country = event_target:rg_graygoo_country
				}
				country_event = {
					id = rg_event.405
					days = 10
					random = 5
				}
			}
		}
		if = {
			limit = {
				event_target:rg_graygoo_country = {
					num_fleets < 60
				}
			}
			every_system = {
				limit = {
					NOR = {
						has_star_flag = lcluster_lgate
						has_star_flag = lgate_originating_system
					}
					any_system_megastructure = {
						is_megastructure_type = lgate_base
					}
				}
				random_system_megastructure = {
					limit = {
						is_megastructure_type = lgate_base
					}
					create_ambient_object = {
						type = "horror_spawn_object"
						location = THIS
						use_3d_location = yes
						duration = 10
					}
					while = {
						count = 2
						create_fleet = {
							name = "NAME_Tempest_Fleet"
							effect = {
								set_owner = event_target:rg_graygoo_country
								rg_create_graygoo_fleet_random = yes
								set_formation_scale = 2
								set_fleet_stance = aggressive
								set_aggro_range_measure_from = self
								set_aggro_range = 250
								set_location = {
									target = prev
									distance = 0
									angle = 0
								}
								fleet_event = {
									id = rg_event.406
									days = 30
									random = 5
								}
							}
						}
					}
				}
			}
		}
	}
}

