rg_gray_govener_init = {
	event_target:rg_gray_country = {
		create_leader = {
			class = official
			species = event_target:gray_species
			name = "NAME_Gray"
			gender = female
			immortal = yes
			event_leader = yes
			skip_background_generation = yes
			randomize_traits = no
			custom_catch_phrase = gray_catch_phrase
			custom_description = gray_backstory
			background_ethic = ethic_gestalt_consciousness
			hide_age = yes
			skill = 1
			set_age = 18
			traits = {
				0 = RG_leader_trait_governor_gray
			}
			effect = {
				save_global_event_target_as = gray_governor
				save_global_event_target_as = gray_official
				set_leader_flag = gray_governor
				set_leader_flag = legendary_leader
				set_leader_flag = immune_to_negative_traits
				set_leader_flag = rg_gray_leader
				if = {
					limit = {
						has_global_flag = has_wsg_mod
					}
					set_leader_flag = not_has_wg_affection_normal
				}
				if = {
					limit = {
							OR = {
								has_global_flag = has_wsg_mod
								has_global_flag = kdc_event_mod_active
							}
					}
					set_leader_flag = "gray_leader"
					set_leader_flag = gray_leader
					add_trait_no_notify = leader_trait_governor_gray
					add_trait_no_notify = RG_leader_trait_ruler_gray
					add_trait_no_notify = subclass_official_governor
					add_trait_no_notify = trait_ruler_architectural_sense_3
					add_trait_no_notify = leader_trait_distribution_lines_2
					if = {
						limit = {
							owner = {
								has_country_flag = origin_gray_weaken
								has_country_flag = origin_gray_country
							}
						}
						remove_trait = leader_trait_governor_gray
						add_trait_no_notify = leader_trait_governor_gray_weak
					}
				}
				else = {
					add_trait_no_notify = RG_leader_trait_governor_gray
					add_trait_no_notify = RG_leader_trait_ruler_gray
					add_trait_no_notify = subclass_official_governor
					add_trait_no_notify = trait_ruler_architectural_sense_3
					add_trait_no_notify = leader_trait_distribution_lines_2
				}
			}
		}
		last_created_leader = {
			set_owner = event_target:gray_owner
		}
	}
	last_created_leader = {
		set_leader_flag = has_gained_level_trait
		rg_gray_leader_experience_jar = yes
	}
	random_owned_leader = {
		limit = {
			has_leader_flag = gray_governor
		}
		if = {
			limit = {
				owner = {
					OR = {
						has_global_flag = has_wsg_mod
						has_global_flag = kdc_event_mod_active
					}
				}
			}
			if = {
				limit = {
					has_leader_flag = has_wg_affection_wg_gray
				}
				if = {
					limit = {
						owner = { has_country_flag = married_gray }
					}
					set_leader_flag = married
				}
				set_variable = { which = affection value = owner.wg_gray_affection }
			}
			# if = {
			# 	limit = {
			# 		owner = {
			# 			has_country_flag = gray_encountered_the_loop
			# 		}
			# 	}
			# 	add_trait_no_notify = leader_trait_governor_wg_the_loop
			# }
			rg_set_gray_portrait = yes
			# add_special_leader_affection_trait = { LEADER = gray LEADER_CLASS = governor MARRIED_FLAG = married_gray }
		}
		else = {
			rg_set_gray_portrait = yes
		}
	}
	
}

rg_gray_commander_init = {
	event_target:rg_gray_country = {
		create_leader = {
			class = commander
			species = event_target:gray_species
			name = "NAME_Gray"
			immortal = yes
			event_leader = yes
			skip_background_generation = yes
			randomize_traits = no
			custom_catch_phrase = gray_catch_phrase
			custom_description = gray_backstory
			background_ethic = ethic_gestalt_consciousness
			hide_age = yes
			gender = female
			skill = 1
			set_age = 18
			traits = {
				0 = RG_leader_trait_admiral_gray
			}
			effect = {
				save_global_event_target_as = gray_leader_admiral
				set_leader_flag = gray_admiral
				save_global_event_target_as = gray_leader_general
				set_leader_flag = gray_general
				set_leader_flag = legendary_leader
				set_leader_flag = immune_to_negative_traits
				if = {
					limit = {
						has_global_flag = has_wsg_mod
					}
					set_leader_flag = not_has_wg_affection_normal
				}
				if = {
					limit = {
							OR = {
								has_global_flag = has_wsg_mod
								has_global_flag = kdc_event_mod_active
							}
					}
					set_leader_flag = "gray_leader"					# "gray_leader"==rg_gray_leader
					set_leader_flag = gray_leader
					add_trait_no_notify = gray_admiral
					if = {
						limit = {
							owner = {
								has_country_flag = origin_gray_weaken
								has_country_flag = origin_gray_country
							}
						}
						remove_trait = gray_admiral
						add_trait_no_notify = leader_trait_admiral_gray_weak
						# 缺少特质leader_trait_admiral_gray_weak将导致KDC故事包远星之歌起源研究纳米星球特殊项目无法完成
					}
				}
				set_leader_flag = rg_gray_leader
				add_trait_no_notify = RG_leader_trait_admiral_gray
				add_trait_no_notify = RG_leader_trait_admiral_nanorebuild_gray
				# add_trait_no_notify = RG_leader_trait_general_gray_skill
				# 缺少特质RG_leader_trait_admiral_gray将导致小灰改造项目无法完成
				add_trait_no_notify = subclass_commander_councilor
				add_trait_no_notify = leader_trait_carrier_specialization
				add_trait_no_notify = leader_trait_juryrigger_2
				add_trait_no_notify = leader_trait_reinforcer_2
			}
		}
		last_created_leader = {
			set_owner = event_target:gray_owner
		}
	}
	last_created_leader = {
		set_leader_flag = has_gained_level_trait
		rg_gray_leader_experience_jar = yes
	}
	random_owned_leader = {
		limit = {
			has_leader_flag = gray_admiral
		}
		if = {
			limit = {
				owner = {
					OR = {
						has_global_flag = has_wsg_mod
						has_global_flag = kdc_event_mod_active
					}
				}
			}
			if = {
				limit = {
					has_leader_flag = has_wg_affection_wg_gray
				}
				if = {
					limit = {
						owner = { has_country_flag = married_gray }
					}
					set_leader_flag = married
				}
				set_variable = { which = affection value = owner.wg_gray_affection }
			}
			# add_trait_no_notify = leader_trait_admiral_wg_gray_affection
			# if = {
			# 	limit = {
			# 		owner = {
			# 			has_country_flag = gray_encountered_the_loop
			# 		}
			# 	}
			# 	add_trait_no_notify = leader_trait_admiral_wg_the_loop
			# }
			rg_set_gray_portrait = yes
			# add_special_leader_affection_trait = { LEADER = gray LEADER_CLASS = governor MARRIED_FLAG = married_gray }
		}
		else = {
			rg_set_gray_portrait = yes
		}
	}
	RG_leader_trait_admiral_nanorebuild_gray_counter_init_effect = yes
	RG_leader_trait_general_tempest_incoming_counter_init_effect = yes
}
# 
# rg_gray_admiral_init = {
# 	event_target:rg_gray_country = {
# 		create_leader = {
# 			class = admiral
# 			species = root
# 			name = "NAME_Gray"
# 			immortal = yes
# 			event_leader = yes
# 			skip_background_generation = yes
# 			custom_catch_phrase = gray_catch_phrase
# 			custom_description = gray_backstory
# 			background_ethic = ethic_gestalt_consciousness
# 			hide_age = yes
# 			gender = female
# 			skill = 10
# 			set_age = 18
# 			traits = {
# 				trait = RG_leader_trait_admiral_gray
# 			}
# 			effect = {
# 				save_global_event_target_as = gray_leader_admiral
# 				set_leader_flag = gray_admiral
# 				set_leader_flag = legendary_leader
# 				set_leader_flag = immune_to_negative_traits
# 				if = {
# 					limit = {
# 						has_global_flag = has_wsg_mod
# 					}
# 					set_leader_flag = not_has_wg_affection_normal
# 				}
# 				if = {
# 					limit = {
# 						owner = {
# 							OR = {
# 								has_global_flag = has_wsg_mod
# 								has_global_flag = kdc_event_mod_active
# 							}
# 						}
# 					}
# 					set_leader_flag = "gray_leader"					# "gray_leader"==rg_gray_leader
# 					set_leader_flag = gray_leader
# 					add_trait_no_notify = gray_admiral
# 					if = {
# 						limit = {
# 							owner = {
# 								has_country_flag = origin_gray_weaken
# 								has_country_flag = origin_gray_country
# 							}
# 						}
# 						remove_trait = gray_admiral
# 						add_trait_no_notify = leader_trait_admiral_gray_weak
# 						# 缺少特质leader_trait_admiral_gray_weak将导致KDC故事包远星之歌起源研究纳米星球特殊项目无法完成
# 					}
# 				}
# 				set_leader_flag = rg_gray_leader
# 				add_trait_no_notify = RG_leader_trait_admiral_gray
# 				add_trait_no_notify = RG_leader_trait_admiral_nanorebuild_gray
# 				# 缺少特质RG_leader_trait_admiral_gray将导致小灰改造项目无法完成
# 				add_trait_no_notify = subclass_admiral_aggressor
# 				add_trait_no_notify = leader_trait_carrier_specialization
# 				add_trait_no_notify = leader_trait_artillerist_2
# 				add_trait_no_notify = leader_trait_juryrigger_2
# 			}
# 		}
# 		last_created_leader = {
# 			set_owner = event_target:gray_owner
# 		}
# 	}
# 	last_created_leader = {
# 		set_leader_flag = has_gained_level_trait
# 	}
# 	random_owned_leader = {
# 		limit = {
# 			has_leader_flag = gray_admiral
# 		}
# 		if = {
# 			limit = {
# 				owner = {
# 					OR = {
# 						has_global_flag = has_wsg_mod
# 						has_global_flag = kdc_event_mod_active
# 					}
# 				}
# 			}
# 			if = {
# 				limit = {
# 					has_leader_flag = has_wg_affection_wg_gray
# 				}
# 				if = {
# 					limit = {
# 						owner = { has_country_flag = married_gray }
# 					}
# 					set_leader_flag = married
# 				}
# 				set_variable = { which = affection value = owner.wg_gray_affection }
# 			}
# 			add_trait_no_notify = leader_trait_admiral_wg_gray_affection
# 			if = {
# 				limit = {
# 					owner = {
# 						has_country_flag = gray_encountered_the_loop
# 					}
# 				}
# 				add_trait_no_notify = leader_trait_admiral_wg_the_loop
# 			}
# 			set_gray_portrait = yes
# 			# add_special_leader_affection_trait = { LEADER = gray LEADER_CLASS = governor MARRIED_FLAG = married_gray }
# 		}
# 		else = {
# 			rg_set_gray_portrait = yes
# 		}
# 	}
# 	RG_leader_trait_admiral_nanorebuild_gray_counter_init_effect = yes
# }
# 
# rg_gray_general_init = {
# 	event_target:rg_gray_country = {
# 		create_leader = {
# 			class = general
# 			species = root
# 			name = "NAME_Gray"
# 			immortal = yes
# 			event_leader = yes
# 			skip_background_generation = yes
# 			custom_catch_phrase = gray_catch_phrase
# 			custom_description = gray_backstory
# 			background_ethic = ethic_gestalt_consciousness
# 			hide_age = yes
# 			gender = female
# 			skill = 10
# 			set_age = 18
# 			traits = {
# 				trait = RG_leader_trait_general_gray
# 				trait = RG_leader_trait_general_gray_skill
# 				trait = subclass_general_marshall
# 				trait = leader_trait_heavy_hitter_2
# 				trait = leader_trait_reinforcer_2
# 			}
# 			effect = {
# 				save_global_event_target_as = gray_leader_general
# 				set_leader_flag = rg_gray_leader
# 				set_leader_flag = gray_general
# 				set_leader_flag = legendary_leader
# 				set_leader_flag = immune_to_negative_traits
# 				if = {
# 					limit = {
# 						has_global_flag = has_wsg_mod
# 					}
# 					set_leader_flag = not_has_wg_affection_normal
# 				}
# 				if = {
# 					limit = {
# 						owner = {
# 							OR = {
# 								has_global_flag = has_wsg_mod
# 								has_global_flag = kdc_event_mod_active
# 							}
# 						}
# 					}
# 					set_leader_flag = "gray_leader"					# "gray_leader"==rg_gray_leader
# 					set_leader_flag = gray_leader
# 				}
# 			}
# 		}
# 		last_created_leader = {
# 			set_owner = event_target:gray_owner
# 		}
# 	}
# 	last_created_leader = {
# 		set_leader_flag = has_gained_level_trait
# 	}
# 	random_owned_leader = {
# 		limit = {
# 			has_leader_flag = gray_general
# 		}
# 		if = {
# 			limit = {
# 				owner = {
# 					OR = {
# 						has_global_flag = has_wsg_mod
# 						has_global_flag = kdc_event_mod_active
# 					}
# 				}
# 			}
# 			if = {
# 				limit = {
# 					has_leader_flag = has_wg_affection_wg_gray
# 				}
# 				if = {
# 					limit = {
# 						owner = { has_country_flag = married_gray }
# 					}
# 					set_leader_flag = married
# 				}
# 				set_variable = { which = affection value = owner.wg_gray_affection }
# 			}
# 			# add_trait_no_notify = leader_trait_admiral_wg_gray_affection
# 			if = {
# 				limit = {
# 					owner = {
# 						has_country_flag = gray_encountered_the_loop
# 					}
# 				}
# 				add_trait_no_notify = leader_trait_admiral_wg_the_loop
# 			}
# 			set_gray_portrait = yes
# 			# add_special_leader_affection_trait = { LEADER = gray LEADER_CLASS = governor MARRIED_FLAG = married_gray }
# 		}
# 		else = {
# 			rg_set_gray_portrait = yes
# 		}
# 	}
# 	set_variable = {
# 		which = rg_general_skill_combat_daypassed_variable
# 		value = 1
# 	}
# 	set_variable = {
# 		which = rg_general_skill_combat_killed_variable
# 		value = 0
# 	}
# 	
# }

rg_gray_scientist_init = {
	event_target:rg_gray_country = {
		create_leader = {
			class = scientist
			species = event_target:gray_species
			name = "NAME_Gray"
			immortal = yes
			event_leader = yes
			skip_background_generation = yes
			randomize_traits = no
			custom_catch_phrase = gray_catch_phrase
			custom_description = gray_backstory
			background_ethic = ethic_gestalt_consciousness
			hide_age = yes
			gender = female
			skill = 1
			set_age = 18
			traits = {
				0 = RG_leader_trait_scientist_gray
				1 = subclass_scientist_explorer
				2 = leader_trait_engineering_focus_2
				3 = leader_trait_salvager_3
			}
			effect = {
				save_global_event_target_as = gray_leader_scientist
				set_leader_flag = rg_gray_leader
				set_leader_flag = gray_scientist
				set_leader_flag = legendary_leader
				set_leader_flag = immune_to_negative_traits
				if = {
					limit = {
						has_global_flag = has_wsg_mod
					}
					set_leader_flag = not_has_wg_affection_normal
				}
				if = {
					limit = {
						OR = {
							has_global_flag = has_wsg_mod
							has_global_flag = kdc_event_mod_active
						}
					}
					set_leader_flag = "gray_leader"					# "gray_leader"==rg_gray_leader
					set_leader_flag = gray_leader
				}
			}
		}
		last_created_leader = {
			set_owner = event_target:gray_owner
		}
	}
	last_created_leader = {
		set_leader_flag = has_gained_level_trait
		rg_gray_leader_experience_jar = yes
	}
	random_owned_leader = {
		limit = {
			has_leader_flag = gray_scientist
		}
		if = {
			limit = {
				OR = {
					has_global_flag = has_wsg_mod
					has_global_flag = kdc_event_mod_active
				}
			}
			if = {
				limit = {
					has_leader_flag = has_wg_affection_wg_gray
				}
				if = {
					limit = {
						owner = { has_country_flag = married_gray }
					}
					set_leader_flag = married
				}
				set_variable = { which = affection value = owner.wg_gray_affection }
			}
			# add_trait_no_notify = leader_trait_admiral_wg_gray_affection
			# if = {
			# 	limit = {
			# 		owner = {
			# 			has_country_flag = gray_encountered_the_loop
			# 		}
			# 	}
			# 	add_trait_no_notify = leader_trait_admiral_wg_the_loop
			# }
			rg_set_gray_portrait = yes
			# add_special_leader_affection_trait = { LEADER = gray LEADER_CLASS = governor MARRIED_FLAG = married_gray }
		}
		else = {
			rg_set_gray_portrait = yes
		}
	}
	
}

rg_gray_country_leader_init = {
	create_leader = {
		# 只用作看板娘
		class = official
		species = event_target:gray_species
		name = "NAME_Gray"
		gender = female
		immortal = yes
		event_leader = yes
		skip_background_generation = yes
		randomize_traits = no
		custom_catch_phrase = gray_catch_phrase
		custom_description = gray_backstory
		background_ethic = ethic_gestalt_consciousness
		hide_age = yes
		skill = 1
		set_age = 18
		traits = {
			0 = RG_leader_trait_governor_gray
			1 = RG_leader_trait_ruler_gray
		}
		effect = {
			save_global_event_target_as = rg_gray_country_leader
			set_leader_flag = rg_gray_country_governor
			set_leader_flag = legendary_leader
			set_leader_flag = immune_to_negative_traits
			# 暂时和小灰网络断开连接
			# set_leader_flag = rg_gray_leader
			if = {
				limit = {
					OR = {
						has_global_flag = has_wsg_mod
						has_global_flag = kdc_event_mod_active
					}
				}
				# 暂时和小灰网络断开连接
				# set_leader_flag = "gray_leader"
				# set_leader_flag = gray_leader
				add_trait_no_notify = leader_trait_governor_gray
				add_trait_no_notify = RG_leader_trait_ruler_gray
				add_trait_no_notify = subclass_official_governor
				add_trait_no_notify = trait_ruler_architectural_sense_3
				add_trait_no_notify = leader_trait_distribution_lines_2
			}
			else = {
				add_trait_no_notify = RG_leader_trait_governor_gray
				add_trait_no_notify = RG_leader_trait_ruler_gray
				add_trait_no_notify = subclass_official_governor
				add_trait_no_notify = trait_ruler_architectural_sense_3
				add_trait_no_notify = leader_trait_distribution_lines_2
			}
		}
	}
	last_created_leader = {
		rg_set_gray_portrait = yes
		rg_gray_leader_experience_jar = yes
	}
}

rg_gray_leader_experience_jar = {
	if = {
		limit = {
			owner = {
				NOT = {
					RG_has_gray_cluster_origin_trigger = yes
				}
			}
			has_skill < 10
		}
		add_experience = 54000
		event_target:gray_owner = {
			rg_save_gray_leader_level_effect = yes
		}
	}
}