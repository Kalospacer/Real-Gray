
rg_create_gray_const = {
	optimize_memory
	if = {
		limit = { has_country_flag = gray_warship_active }
		if = {
			limit = { exists = event_target:gray_warship }
			event_target:gray_warship = {
				save_event_target_as = gray_constship_location
			}
		} else = {
			random_controlled_fleet = {
				limit = { has_fleet_flag = gray_fleet }
				save_event_target_as = gray_constship_location
			}
		}
	}
	else_if = {
		limit = { has_country_flag = gray_juggernaut_active }
		if = {
			limit = { exists = event_target:gray_juggernaut }
			event_target:gray_juggernaut = {
				save_event_target_as = gray_constship_location
			}
		} else = {
			random_controlled_fleet = {
				limit = { has_fleet_flag = gray_juggernaut_fleet }
				save_event_target_as = gray_constship_location
			}
		}
	}
	else_if = {
		limit = { has_country_flag = gray_army_active }
		if = {
			limit = {
				any_owned_army = {
					army_type = gray_army
					exists = planet
				}
			}
			random_owned_army = {
				limit = { army_type = gray_army }
				planet = { save_event_target_as = gray_constship_location }
			}
		}
		else = {
			random_owned_army = {
				limit = { army_type = gray_army }
				fleet = { save_event_target_as = gray_constship_location }
			}
		}
	}
	else_if = {
		limit = { has_country_flag = gray_governor_active }
		if = {
			limit = { any_owned_planet = {
				exists = sector.leader
				sector.leader = { has_leader_flag = gray_governor }
				}
			}
			random_owned_planet = {
				limit = {
					exists = sector.leader
					sector.leader = { has_leader_flag = gray_governor }
				}
				save_event_target_as = gray_constship_location
			}
		}
		else = {
			capital_scope = { save_event_target_as = gray_constship_location }
		}
	} 
	else = {
		capital_scope = { save_event_target_as = gray_constship_location }
	}

	every_owned_leader = {
		if = {
			###等级检测
			limit = {
				has_leader_flag = rg_gray_leader
				NOT = {
					has_leader_flag = rg_gray_leader_temp
				}
			}
			export_trigger_value_to_variable = {
				trigger = has_skill
				variable = rg_gray_level_temp
			}
			owner = {
				set_variable = {
					which = rg_gray_level
					value = prev.rg_gray_level_temp
				}
			}
			clear_variable = rg_gray_level_temp
		}
	}

	every_owned_leader = {
		limit = { has_leader_flag = rg_gray_leader }
		set_owner = event_target:rg_gray_country
		set_leader_flag = rg_gray_leader_temp
		# kill_leader = { show_notification = no }
	}

	if = {
		limit = { 
			exists = event_target:gray_leader_scientist
		}
		event_target:gray_leader_scientist = { 
			set_owner = event_target:gray_owner 
			remove_leader_flag = rg_gray_leader_temp
		}
	}
	else = {
		create_leader = {
			class = scientist
			species = event_target:gray_species
			name = "NAME_Gray"
			immortal = yes
			event_leader = yes
			gender = female
			skill = 10
			set_age = 18
			traits = {
				trait = RG_leader_trait_scientist_gray
				trait = leader_trait_carefree
			}
			effect = {
				save_global_event_target_as = gray_leader_scientist
				set_leader_flag = rg_gray_leader
				set_leader_flag = gray_scientist
				change_leader_portrait = Gray
			}
		}
	}

	set_country_flag = gray_constship_active
	create_fleet = {
		name = "NAME_Gray"
		settings = { 
			can_upgrade = no 
			can_disband = no
			can_change_composition = no 
			can_change_leader = yes 
			uses_naval_capacity = no
			spawn_debris = no 
		}
		effect = {
			set_owner = prev
			create_ship = {
				name = "NAME_Gray"
				design = "NAME_RG_GRAY_scienceship"
				prefix = no
				upgradable = yes
			}
			set_fleet_stance = evasive
			set_location = {
				target = event_target:gray_constship_location
				distance = 0
				angle = random 
			}
			set_fleet_flag = gray_constship
			save_global_event_target_as = global_gray_constship
			set_cloaking_active = yes
			assign_leader = event_target:gray_leader_scientist
		}
	}

	every_owned_fleet = {
		limit = { has_fleet_flag = gray_fleet }
		delete_fleet = {
			target = this
			kill_leader = no
			destroy_template = yes
		}
	}

	every_owned_army = {
		limit = { army_type = gray_army }
		if = {
			limit = { exists = leader }
			unassign_leader = leader
		}
		remove_army = yes
	}

	remove_country_flag = gray_army_active
	remove_country_flag = gray_warship_active
	remove_country_flag = gray_governor_active


	random_owned_leader = {
		limit = { has_leader_flag = gray_scientist }
		set_skill = owner.rg_gray_level
	}
}

rg_create_gray_army = {
	optimize_memory
	if = {
		limit = { has_country_flag = gray_constship_active }
		if = {
			limit = { exists = event_target:global_gray_constship }
			event_target:global_gray_constship = {
				save_event_target_as = gray_transport_location
			}
		} else = {
			random_owned_fleet = {
				limit = { has_fleet_flag = gray_constship }
				save_event_target_as = gray_transport_location
			}
		}
	}
	else_if = {
		limit = { has_country_flag = gray_warship_active }
		if = {
			limit = { exists = event_target:gray_warship }
			event_target:gray_warship = {
				save_event_target_as = gray_transport_location
			}
		} else = {
			random_owned_fleet = {
				limit = { has_fleet_flag = gray_fleet }
				save_event_target_as = gray_transport_location
			}
		}
	}
	else_if = {
		limit = { has_country_flag = gray_juggernaut_active }
		if = {
			limit = { exists = event_target:gray_juggernaut }
			event_target:gray_juggernaut = {
				save_event_target_as = gray_transport_location
			}
		} else = {
			random_controlled_fleet = {
				limit = { has_fleet_flag = gray_juggernaut_fleet }
				save_event_target_as = gray_transport_location
			}
		}
	}
	else_if = {
		limit = { has_country_flag = gray_governor_active }
		if = {
			limit = { any_owned_planet = {
				exists = sector.leader
				sector.leader = { has_leader_flag = gray_governor }
				}
			}
			random_owned_planet = {
				limit = {
					exists = sector.leader
					sector.leader = { has_leader_flag = gray_governor }
				}
				save_event_target_as = gray_transport_location
			}
		}
		else = {
			capital_scope = { save_event_target_as = gray_warship_location }
		}
	} 
	else = {
		capital_scope = { save_event_target_as = gray_transport_location }
	}

	every_owned_leader = {
		if = {
			###等级检测
			limit = {
				has_leader_flag = rg_gray_leader
				NOT = {
					has_leader_flag = rg_gray_leader_temp
				}
			}
			export_trigger_value_to_variable = {
				trigger = has_skill
				variable = rg_gray_level_temp
			}
			owner = {
				set_variable = {
					which = rg_gray_level
					value = prev.rg_gray_level_temp
				}
			}
			clear_variable = rg_gray_level_temp
		}
	}

	every_owned_leader = {
		limit = { has_leader_flag = rg_gray_leader }
		set_owner = event_target:rg_gray_country
		set_leader_flag = rg_gray_leader_temp
		# kill_leader = { show_notification = no }
	}

	if = {
		limit = { 
			exists = event_target:gray_leader_general
		}
		event_target:gray_leader_general = { 
			set_owner = event_target:gray_owner 
			remove_leader_flag = rg_gray_leader_temp
		}
	}
	else = {
		create_leader = {
			class = general
			species = event_target:gray_species
			name = "NAME_Gray"
			immortal = yes
			event_leader = yes
			gender = female
			skill = 10
			set_age = 18
			traits = {
				trait = RG_leader_trait_general_gray
				trait = leader_trait_army_logistician
			}
			effect = {
				save_global_event_target_as = gray_leader_general
				set_leader_flag = rg_gray_leader
				set_leader_flag = gray_general
				change_leader_portrait = Gray
			}
		}
	}
	create_ship_design = {
		design = "NAME_RG_armed_transport_ship"
	}
	add_ship_design = last_created_design
	set_country_flag = gray_army_active
	create_fleet = {
		name = "NAME_Gray"
		effect = {
			set_owner = prev
			create_army_transport = {
				ship_name = "NAME_Gray"
				army_name = "NAME_Gray"
				army_type = "gray_army"
			}
			set_location = {
				target = event_target:gray_transport_location
				distance = 0
				angle = random 
			}
			# set_cloaking_active = yes
			set_fleet_stance = aggressive
		}
	}
	last_created_army = {
		assign_leader = event_target:gray_leader_general
	}

	every_owned_fleet = {
		limit = { has_fleet_flag = gray_fleet }
		delete_fleet = {
			target = this
			kill_leader = no
			destroy_template = yes
		}
	}

	every_owned_fleet = {
		limit = { has_fleet_flag = gray_constship }
		delete_fleet = {
			target = this
			kill_leader = no
			destroy_template = yes
		}
	}

	remove_country_flag = gray_warship_active
	remove_country_flag = gray_governor_active
	remove_country_flag = gray_constship_active
	
	remove_ship_design = last_created_design

	random_owned_leader = {
		limit = { has_leader_flag = gray_general }
		set_skill = owner.rg_gray_level
	}
}

rg_create_gray_governor = {	
	optimize_memory
	every_owned_leader = {
		limit = { has_leader_flag = rg_gray_leader }
		kill_leader = { show_notification = no }
	}
	every_owned_fleet = {
		limit = { has_fleet_flag = gray_fleet }
		delete_fleet = {
			target = this
			kill_leader = no
			destroy_template = yes
		}
	}
	every_owned_fleet = {
		limit = { has_fleet_flag = gray_constship }
		delete_fleet = {
			target = this
			kill_leader = no
			destroy_template = yes
		}
	}

	every_owned_army = {
		limit = { army_type = gray_army }
		if = {
			limit = { exists = leader }
			unassign_leader = leader
		}
		remove_army = yes
	}

	every_owned_leader = {
		if = {
			###等级检测
			limit = {
				has_leader_flag = rg_gray_leader
				NOT = {
					has_leader_flag = rg_gray_leader_temp
				}
			}
			export_trigger_value_to_variable = {
				trigger = has_skill
				variable = rg_gray_level_temp
			}
			owner = {
				set_variable = {
					which = rg_gray_level
					value = prev.rg_gray_level_temp
				}
			}
			clear_variable = rg_gray_level_temp
		}
	}

	every_owned_leader = {
		limit = { has_leader_flag = rg_gray_leader }
		set_owner = event_target:rg_gray_country
		set_leader_flag = rg_gray_leader_temp
		# kill_leader = { show_notification = no }
	}

	if = {
		limit = { 
			exists = event_target:gray_governor
		}
		event_target:gray_governor = { 
			set_owner = event_target:gray_owner 
			remove_leader_flag = rg_gray_leader_temp
			}
	}
	else = {
		create_leader = {							
			class = governor
			species = event_target:gray_species
			name = "NAME_Gray"
			gender = female
			immortal = yes
			event_leader = yes
			skill = 10
			set_age = 18
			traits = {
				trait = RG_leader_trait_governor_gray
				trait = leader_trait_retired_fleet_officer
			}
			effect = {
				save_global_event_target_as = gray_governor
				set_leader_flag = rg_gray_leader
				set_leader_flag = gray_governor
			}
		}
	}
	set_country_flag = gray_governor_active

	remove_country_flag = gray_warship_active
	remove_country_flag = gray_constship_active
	remove_country_flag = gray_army_active

	random_owned_leader = {
		limit = { has_leader_flag = gray_governor }
		set_skill = owner.rg_gray_level
	}
}

rg_create_gray_warship = {
	optimize_memory
	if = {
		limit = { has_country_flag = gray_constship_active }
		if = {
			limit = { exists = event_target:global_gray_constship }
			event_target:global_gray_constship = {
				save_event_target_as = gray_warship_location
			}
		} else = {
			random_controlled_fleet = {
				limit = { has_fleet_flag = gray_constship }
				save_event_target_as = gray_warship_location
			}
		}
	}
	else_if = {
		limit = { has_country_flag = gray_juggernaut_active }
		if = {
			limit = { exists = event_target:gray_juggernaut }
			event_target:gray_juggernaut = {
				save_event_target_as = gray_warship_location
			}
		} else = {
			random_controlled_fleet = {
				limit = { has_fleet_flag = gray_juggernaut_fleet }
				save_event_target_as = gray_warship_location
			}
		}
	}
	else_if = {
		limit = { has_country_flag = gray_army_active }
		if = {
			limit = {
				any_owned_army = {
					army_type = gray_army
					exists = planet
				}
			}
			random_owned_army = {
				limit = { army_type = gray_army }
				planet = { save_event_target_as = gray_warship_location }
			}
		}
		else = {
			random_owned_army = {
				limit = { army_type = gray_army }
				fleet = { save_event_target_as = gray_warship_location }
			}
		}
	}
	else_if = {
		limit = { has_country_flag = gray_governor_active }
		if = {
			limit = { any_owned_planet = {
				exists = sector.leader
				sector.leader = { has_leader_flag = gray_governor }
				}
			}
			random_owned_planet = {
				limit = {
					exists = sector.leader
					sector.leader = { has_leader_flag = gray_governor }
				}
				save_event_target_as = gray_warship_location
			}
		}
		else = {
			capital_scope = { save_event_target_as = gray_warship_location }
		}
	} 
	else = {
		capital_scope = { save_event_target_as = gray_warship_location }
	}

	every_owned_leader = {
		if = {
			###等级检测
			limit = {
				has_leader_flag = rg_gray_leader
				NOT = {
					has_leader_flag = rg_gray_leader_temp
				}
			}
			export_trigger_value_to_variable = {
				trigger = has_skill
				variable = rg_gray_level_temp
			}
			owner = {
				set_variable = {
					which = rg_gray_level
					value = prev.rg_gray_level_temp
				}
			}
			clear_variable = rg_gray_level_temp
		}
	}

	every_owned_leader = {
		limit = { has_leader_flag = rg_gray_leader }
		set_owner = event_target:rg_gray_country
		set_leader_flag = rg_gray_leader_temp
		# kill_leader = { show_notification = no }
	}

	if = {
		limit = { 
			exists = event_target:gray_leader_admiral
		}
		event_target:gray_leader_admiral = { 
			set_owner = event_target:gray_owner 
			remove_leader_flag = rg_gray_leader_temp
			}
	}
	else = {
		create_leader = {
			class = admiral
			species = event_target:gray_species
			name = "NAME_Gray"
			immortal = yes
			event_leader = yes
			gender = female
			skill = 10
			set_age = 18
			traits = {
			   trait = RG_leader_trait_admiral_gray
			   trait = leader_trait_gale_speed
			}
			effect = {
			   save_global_event_target_as = gray_leader_admiral
			   set_leader_flag = rg_gray_leader
			   set_leader_flag = gray_admiral
			}
		}
	}

	set_country_flag = gray_warship_active
	if = {
		limit = {
			has_country_flag = rg_gray_level_2
		}
		create_fleet = {
			name = "NAME_Gray"
			settings = { 
				can_upgrade = no 
				can_disband = no
				can_change_composition = no 
				can_change_leader = yes 
				uses_naval_capacity = no
				spawn_debris = no 
			}
			effect = {
				set_owner = prev
				create_ship = {
					name = "NAME_Gray"
					design = "NAME_Gray_Warship"
					prefix = no
					upgradable = yes
				}
				set_fleet_stance = aggressive
				set_location = {
					target = event_target:gray_warship_location
					distance = 0
					angle = random 
				}
				set_fleet_flag = gray_fleet
				save_global_event_target_as = gray_warship

				assign_leader = event_target:gray_leader_admiral
			}
		}
	}
	else_if = {
		limit = {
			has_country_flag = rg_gray_level_3
			NOT = {
				has_country_flag = gray_warship_is_juggernaut
			}
		}
		create_fleet = {
			name = "NAME_Gray"
			settings = { 
				can_upgrade = no 
				can_disband = no
				can_change_composition = no 
				can_change_leader = yes 
				uses_naval_capacity = no
				spawn_debris = no 
			}
			effect = {
				set_owner = prev
				create_ship = {
					name = "NAME_Gray"
					design = "NAME_gray_capitalship"
					prefix = no
					upgradable = yes
				}
				set_fleet_stance = aggressive
				set_location = {
					target = event_target:gray_warship_location
					distance = 0
					angle = random 
				}
				set_fleet_flag = gray_fleet
				save_global_event_target_as = gray_warship

				assign_leader = event_target:gray_leader_admiral
			}
		}
	}
	else_if = {
		limit = {
			has_country_flag = gray_warship_is_juggernaut
		}
		create_fleet = {
		name = "NAME_Gray"
		settings = { 
			can_upgrade = no 
			can_disband = no
			can_change_composition = no 
			can_change_leader = yes 
			uses_naval_capacity = no
			spawn_debris = no 
		}
		effect = {
			set_owner = prev
			create_ship = {
				name = "NAME_Gray"
				design = "NAME_gray_juggernautship"
				prefix = no
				upgradable = yes
			}
			set_fleet_stance = aggressive
			set_location = {
				target = root.capital_scope
				distance = 0
				angle = random 
			}
			set_fleet_flag = gray_fleet
			save_global_event_target_as = gray_warship
			}
		}
	}
	else = {
		create_fleet = {
			name = "NAME_Gray"
			settings = { 
				can_upgrade = no 
				can_disband = no
				can_change_composition = no 
				can_change_leader = yes 
				uses_naval_capacity = no
				spawn_debris = no 
			}
			effect = {
				set_owner = prev
				create_ship = {
					name = "NAME_Gray"
					design = "NAME_Gray_Warship_base"
					prefix = no
					upgradable = yes
				}
				set_fleet_stance = aggressive
				set_location = {
					target = event_target:gray_warship_location
					distance = 0
					angle = random 
				}
				set_fleet_flag = gray_fleet
				save_global_event_target_as = gray_warship

				assign_leader = event_target:gray_leader_admiral
			}
		}
	}

	every_owned_army = {
		limit = { army_type = gray_army }
		if = {
			limit = { exists = leader }
			unassign_leader = leader
		}
		remove_army = yes
	}
	every_owned_fleet = {
		limit = { has_fleet_flag = gray_constship }
		delete_fleet = {
			target = this
			kill_leader = no
			destroy_template = yes
		}
	}


	remove_country_flag = gray_constship_active
	remove_country_flag = gray_governor_active
	remove_country_flag = gray_army_active

	random_owned_leader = {
		limit = { has_leader_flag = gray_admiral }
		set_skill = owner.rg_gray_level
	}
}


